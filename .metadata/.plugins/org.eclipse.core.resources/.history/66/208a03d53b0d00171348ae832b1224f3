package thread;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class longest_palindromic_substring {

	public static void main(String args[]) throws IOException
	{
	   BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
	   System.out.println("enter the string");
	   String str= br.readLine();
	   lps(str);
	}
	
	public static void lps(String str)
	{
		int len= str.length();
		int max_len=1;
		int s_index=0;
		int arr[][]= new int [len+1][len+1];
		for(int i=1;i<=len;i++)  // 1 character is always palindrome
		{
			arr[i][i]=1;
		}
		for(int i=1;i<len;i++)   // check for 2 character
		 {
			if(str.charAt(i-1)==str.charAt(i))
			{
				arr[i][i+1]=1;
				s_index=i;
				max_len=2;
			}
			
			else arr[i][i+1]=0;
			
		 }
	}
	
}

